Bugs:

change length of array LQ causes problems:

C:\SupraCL\foundry_scope\ScopeFoundry\logged_quantity.py in send_display_updates(self, force)
    728             self.log.debug(self.name + ' send_display_updates')
    729             #print "send_display_updates: {} force={}".format(self.name, force)
--> 730             if force or np.any(self.oldval != self.val):
    731 
    732                 #print "send display updates", self.name, self.val, self.oldval
ValueError: shape mismatch: objects cannot be broadcast to a single shape


when change_choice_list, resets logged quantity to 0


acton_spectrometer : entrance_slit not loading from INI

hyperspec CL is unhappy

description fields text fields cursor resets on typing in the middle of the block

Thursday recipe stuff:
	add scan rotate to remcon
	add 1 um precision to WD
	
	beam control
		check kV, never write kV to SEM if current value is zero (due to EHT off)
		read kV, do not update LQ if zero
		
	primary/secondary contrast controls

	
	don't delete SYSTEM recipes
	
Force SEM on connect:
	brightness 50 both detectors
	dual dectector mode
	for CL main SE2 secondary inlens
	beam shift to zero
	scan rotate to 90 degres

	
===================
TODO 2018-03-05

+++++DONE++++++_

* Comments / description textbox cursor jumps around -- Fixed
* Pixel zero should be set to pixel 1 for counter channels -- Fixed (we think)

	REMCOM is stage initialized check -- Aready implemented, works
	Get/Set 6-axis stage, works at HW level

Combine mirror motion measurements -- Done

+++++

array logged quantity UI sync issue (eg stage_position)

description updated during run is not saved in H5 (not obvious how to do this)

Sort out SEM/remcon and Auger/remcon, second has stage stuff, including INI status

Mirror INI

Mirror motion:
	enable/disable closed loop for all

Add quickbar

wavelength calibration

relative intensity calibration for andor / spec

SEM stage
	delta xyz buttons  --- DONE, need idiot proofing
	memorize sample positions (x,y,z,r)
		(move to new sample position, drop sample by 1mm, move to xyr, raise by 0.6mm away from sample z)


Disable unused channels

Quad View, make BP image adjustable after acqusiition

Fix oversample problem by computing oversample and ADC rate:
	f(line_size, pixel_time) --> oversample, adc_rate

Andor Camera
	QE Spectral response
	Baseline clamp
	
Image histograms, ignore zero pixels (or use masked array)

Quadview history plot, clear or remove zeros from running average

Store / restore subwindow layouts

non-hyperspectral imaging, acquire one spectrum per image.
